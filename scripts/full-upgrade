#!/bin/sh

# Author: Rick Balocca
# Date: 2007
# Description:

PATH=/opt/vyatta/bin:$PATH

usage()
{
cat <<EOF
$0 must be run with one of the following options:
  -h : Print help ( this help text )
  -k : Keep all packages not part of the target Vyatta version.
       Due to package dependencies some user added packages may not
        function properly.
  -i : The user will be prompted to answer all questions generated by
        packages during the upgrade.
EOF
}

cd /tmp
check-upgrade $*

OPTION="$1"
[ "$OPTION" ] || OPTION=`ps l|grep -v grep|grep 'full-upgrade -'|sed 's,.*full-upgrade ,,'`
case "$OPTION" in
 -i )
	download-only "$OPTION" || exit $?
	/opt/vyatta/bin/_full-upgrade $OPTION
	;;

 -k )
	echo ===full-upgrade "$OPTION"===
	uptime
	date
	download-only "$OPTION" || exit $?
	if ! mkdir full-upgrade.lock
	then
		echo "full-upgrade can't acquire it's lock file (/tmp/full-upgrade.lock )."
		echo "You may be attempting to run full-upgrade more than once simultaneously."
		echo "If you want to proceed, then first rm -rf /tmp/full-upgrade.lock ."
		exit 1
	fi
	echo "Please wait.  Now entering unattended mode."
	echo "This will take a long time.  When done,"
	echo "the system will automatically reboot."
	hupfile=/root/nohup$$.out
	mkdir bak-$$
	mv /root/full-upgrade* bak-$$/.
	>/root/full-upgrade.log
	tail -f /root/full-upgrade.log&
	nohup /opt/vyatta/bin/_full-upgrade $OPTION>&$hupfile
	sleep 10
	cat /root/nohup$$.out
	rm -rf /tmp/full-upgrade.lock
	;;

 * )
	usage
	# need to kill parent full-upgrade process to prevent it from running
	array=(`ps ax | grep full-upgrade | grep -v grep | awk {'print $1'}`)
	len=${#array[*]}
	i=0
	while [ $i -lt $len ]; do
	 if [ "${array[$i]}" != "$$" ]; then
	  kill -9 ${array[$i]} > /dev/null 2>&1
	 fi
	 let i++
	done
	exit
esac
